/*
 * This file is part of l2jserver <l2jserver.com>.
 *
 * l2jserver is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * l2jserver is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with l2jserver.  If not, see <http://www.gnu.org/licenses/>.
 */
package script.template.actor.character;

import com.google.inject.Inject;
import com.l2jserver.model.id.template.CharacterTemplateID;
import com.l2jserver.model.id.template.provider.CharacterTemplateIDProvider;
import com.l2jserver.model.world.L2Character;
import com.l2jserver.model.world.character.CharacterClass;
import com.l2jserver.util.dimensional.Point;

public class ${javaClassName}Template extends ${parent}Template {
	@Inject
	public ${javaClassName}Template(CharacterTemplateIDProvider provider) {
		super(provider.createID(${ClassId}.id), ${ClassId},	Point.fromXYZ(${x}, ${y}, ${z}));
		// ATTRIBUTES
		attributes.intelligence = ${_INT};
		attributes.strength = ${STR};
		attributes.concentration = ${CON};
		attributes.mentality = ${MEN};
		attributes.dexterity = ${DEX};
		attributes.witness = ${WIT};
		attributes.physicalAttack = ${P_ATK};
		attributes.magicalAttack = ${M_ATK};
		attributes.physicalDefense = ${P_DEF};
		attributes.magicalDefense = ${M_DEF};
		attributes.attackSpeed = ${P_SPD};
		attributes.castSpeed = ${M_SPD};
		attributes.accuracy = ${ACC};
		attributes.criticalChance = ${CRITICAL};
		attributes.evasionChance = ${EVASION};
		attributes.moveSpeed = ${MOVE_SPD};
		attributes.maxWeigth = ${_LOAD};
		attributes.craft = ${canCraft};
		
		this.maleCollisionRadius = ${M_COL_R};
		this.maleCollisionHeight = ${M_COL_H};
		this.femaleCollisionRadius = ${F_COL_R};
		this.femaleCollisionHeight = ${F_COL_H};
	}
	
	protected ${javaClassName}Template(CharacterTemplateID id,
			CharacterClass characterClass, Point spawnLocation) {
		super(id, characterClass, spawnLocation);
	}

	@Override
	public L2Character create() {
		final L2Character character = super.create();
		// TODO register skills
		return character;
	}
}
